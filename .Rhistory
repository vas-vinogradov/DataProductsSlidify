.53
ppois(3,2.5*4)
pbinom(5,1000)
pbinom(5,1000,.01)
ppois(5,1000*0.01)
coinPoint(10)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
0.6+c(-1,1)*qnorm(.975)*sqrt(0.6*0.4/100)
x$conf.int
binom.test(0.6,100,p=0.6)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb<-5/94.32
mean + c(-1,1)*qnorm(.975)*sqrt(lamb)
mean + c(-1,1)*qnorm(.975)*sqrt(lamb)
lamb
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975)
qt(.975,df=2)
myplot2(20)
sleep
range(g1)
range(g2)
range(g2-g1)
difference <- g2-g
difference <- g2-g1
mean(difference)
s<-sd(difference)
mean(difference) + c(-1,1)*qt(.975,9)*s/sqrt(9)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(g1,g2)$conf.int
t.test(difference)$conf.int
(8-1)*15.34^2+(21-1)*18.23^2
7*15.34^2+20*18.23^2
sp<-7*15.34^2+20*18.23^2
ns<-27
sp<-sqrt(sp/ns)
132.86-127.44+c(-1,1)*qt(0.975,27)*sp
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1,g2)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/10+1/10)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE,var.equal = TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
1
num <- (15.34^2/8 + 18.23^2/21)^2
2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf<-num/den
e
2
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
swirl()
library(swirl)
swilr()
swirl()
10/sqrt(32)
10/10
(32-30)/1
2/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
l
2
mybin
6
8
1
pt(2.5, 15, lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
1
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6, size=8, prob=.5, lower.tail=FALSE)
pbinom(7, size=8, prob=.5, lower.tail=TRUE)
ppois(0.95,5,lower.tail = FALSE)
ppois(0.9,5,lower.tail = FALSE)
ppois(9,5,lower.tail = FALSE)
swirl()
library(swirl)
swirl()
1
1
1
1
1
1
myplot(34)
123
exit
?
1
library(swirl)
swirl()
library(swirl)
swilr()
swirl()
fir<-lm(child ~ parent,data=galton)
fit <- lm(child ~ parent, galton)
fit$residuals
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
fit$coef[1]
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
rhs-lhs
lhs-rhs
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(galton$parent*ols.slope+ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild,varRes)
all.equal(varRes,varEst)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(fit$residuals,attenu$mag)
1
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
l_nor<-lm(gpa_nor~gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit<-lm(child~parent,data=galton)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
1
mu <- mean(galton$child)
var(galton$child-mu)
sTot<-sum((galton$child-mu)^2)
1
sRes <- deviance(fit)
1
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child,galton$parent)
cor(galton$child,galton$parent)^2
1
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
end
mu <- mean(galton$child)
1
sTot <- sum((galton$child-mu)^2)
1
sRes <- deviance(fit)
1
1-sRes/sTot
1
summary(fit)$r.square
summary(fit)$r.squared
1
cor(galton$parent,galton$child)^2
nes <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
1
lm(child ~ ones + parent -1, galton)
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
1
swirl()
lm(child ~ 1, galton)
view(trees)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all<-lm(Obestity~.)
all<-lm(Obestity~.data=swiss)
all<-lm(Obestity~.,data=swiss)
swiss
all <- lm(Fertility ~ ., swiss)
summary(all)
all <- lm(Fertility ~ Agriculture, swiss)
all <- lm(Fertility ~ ., swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec,data=swiss)
efit$coefficients-all$coefficients
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
sA
summary(InsectSprays[,2])
1
sapply(InsectSprays,class)
1
fit <- lm(count ~ spray, InsectSprays)
fit$coefficients
summary(fit)$coef
est<-summary(fit)$coef[,1]
4
mean(sA)
mean(sprayB)
mean(sB)
nfit<-lm(count~spray-1,data=InsectSprays)
summary(nfit)$coef
1
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
1
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
1
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
1
fit <-lm(hunger$Numeric ~ hunger$Year)
summary(fit)$coef
1
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(Numeric ~ Year+Sex, hunger)
summary(lmBoth)
lmInter(Numberic~Year+Sex+Sex*Year,hunger)
lmInter<-lm(Numberic~Year+Sex+Sex*Year,hunger)
lmInter<-lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit,which=1)
1
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno,which=1)
coef(fit)
coef(fit)-coef(fitno)
1
head(dfbeta(fit))
1
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
1
head(hatvalues(fit))
1
sigma <- sqrt(deviance(fit)/df.residual(fit))
1
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd,
| rstandard(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit, which=3)
1
plot(fit, which=2)
1
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
1
head(rstudent(fit))
1
dy <- predict(fitno, out2)-predict(fit, out2)
1
sum(dy^2)/(2*sigma^2)
1
plot(fit, which=5)
1
rpg1()
rgp1()
rpg2()
rgp2()
1
head(swiss)
1
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ .-Examination, swiss)
vif(mdl2)
1
x1c <- simbias()
apply(x1c,1,mean)
1
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1,fit3)
1
deviance(fit3)
eviance(fit3)/43
deviance(fit3)/43
<- deviance(fit3)/43
d<- deviance(fit3)/43
1
n <- (deviance(fit1) - deviance(fit3))/2
1
n/d
1
pf(n/d, 2, 43, lower.tail=FALSE)
1
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
1
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData) or mdl <- glm(ravenWinNum ~ ravenScore,
| family=binomial, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData) or mdl <- glm(ravenWinNum ~ ravenScore,family=binomial, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
1
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
1
exp(lodds)/(1+exp(lodds))
1
summary(mdl)
1
exp(confint(mdl)
)
1
anova(mdl)
1
qchisq(0.95, 1)
1
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
1
as.integer(head(hits[,'date']
)
)
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
1
which.max(hits[,'visits'])
hits[704,]
1
lambda <- mdl$fitted.values[704]
1
qpois(.95, lambda)
1
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
1
qpois(.95, mdl2$fitted.values[704])
?seq
x<-seq(1,100)
y<-x^2
cor(x,y)
sd(y)
y<-x^2+rnorm(mean=mean(x^2),sd=sd(x^2))
y<-x^2+rnorm(100,mean=mean(x^2),sd=sd(x^2))
cor(x,y)
summary(y)
t.test(x,y)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
libary(rChart)
library(rChart)
install.packages(rChart)
install.packages("rChart")
install.packages("rCharts")
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
devtools::install_github('Rstudio/shinyapps')
shinyapps::setAccountInfo(name='vasvinogradov', token='DFC9F26DB183ADB361D8B8BDEDADFB39', secret='I/QbRnmvVqV5TMKItbYM7Nika23asATYybcSOAva'
)
shinyapps::setAccountInfo(name='vasvinogradov', token='DFC9F26DB183ADB361D8B8BDEDADFB39', secret='I/QbRnmvVqV5TMKItbYM7Nika23asATYybcSOAva')
runapp()
library(shiny)
runapp()
runApp()
setwd("C:\\Users\\Vasiliy Vinogradov\\Documents\\DataScience\\DataProducts\\DataProducts")
runapp()
runApp()
runApp()
runApp()
runapp()
runApp()
?mtcars
min(mtcars$qsec)
max(mtcars$qsec)
max(mtcars$wt)
min(mtcars$wt)
runApp()
data(mtcars)
fit3 <- lm(mpg ~ wt + am + qsec + hp, data=mtcars)
?predict.lm
new <- data.frame(1,2,3)
predict.lm(fit3,newdata = new)
new <- (wt=3,qsec=18,am=1)
wt<-3
qsec<-18
am<-1
new <- (wt,qsec,am)
new <- data.frame(wt,qsec,am)
predict.lm(fit3,newdata = new)
fit3 <- lm(mpg ~ wt + am + qsec, data=mtcars)
predict.lm(fit3,newdata = new)
new <- data.frame(wt=3,qsec=18,am=1)
predict.lm(fit3,newdata = new)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?reactive
shiny::runApp()
?renderPlot
?plotOutput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?annotate
shiny::runApp()
shiny::runApp()
shiny::runApp()
.libPaths()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('Rcpp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
author: "Vasily Vinogradov"
title: "Slidify"
author("first_deck")
library(slidify)
library(slidify)
author("first_deck")
---
---
---
---
---
---
""
title       :
""
title       :
""
fit3 <- lm(mpg ~ wt + am + qsec, data=mtcars)
framework   : shower        # {io2012, html5slides, shower, dzslides, ...}
header(mtcars,10)
head(mtcars,10)
## Data Source
---
""
knit        : slidify::knit2slides
publish("vas-vinogradov","DataProductsSlidify",host="github")
publish(user="vas-vinogradov",repo="DataProductsSlidify",host="github")
publish(user="vas-vinogradov",repo="DataProductsSlidify",host="github")
